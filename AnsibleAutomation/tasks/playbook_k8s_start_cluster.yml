---
#
# CS/ECE 4383/5383: Computer Networks
# CS6381: Distributed Systems
# Author: Aniruddha Gokhale
# Created: Fall 2023
# Modified: Spring 2024
# Modified: Summer 2024 (support for Cilium)
#

# In this playbook we create a K8s cluster on the provided master

#  - name: "Save the token to be used for starting and joining K8s cluster"
#    ansible.builtin.shell:
#      cmd: kubeadm token generate
#      chdir: /home/{{ cloud["user"] }}
#    register: token
    
#  - name: "Save the certificate to be used for starting and joining K8s cluster"
#    ansible.builtin.shell:
#      cmd: kubeadm certs certificate-key
#      chdir: /home/{{ cloud["user"] }}
#    register: cert
    
  - name: "Set additional cmd line options "
    ansible.builtin.set_fact:
      cmd_options: "{{ '--skip-phases=addon/kube-proxy' if K8s['cni']  == 'cilium' else '' }}"
      
  - name: "Executing command to start K8s cluster primary master on this node"
    ansible.builtin.debug:
      msg: kubeadm init --apiserver-advertise-address {{ ansible_facts['default_ipv4']['address'] }} --control-plane-endpoint {{ ansible_facts['default_ipv4']['address'] }} --service-cidr 10.{{ (80 + (groups[K8s['masters_inv']].index (inventory_hostname) // K8s['masters']) + 1)|string }}.0.0/16 --pod-network-cidr={{ K8s['pod_network'] }} {{ cmd_options }} 
    when: "((groups[K8s['masters_inv']].index (inventory_hostname) % K8s['masters']) == 0)"

 # Note that because we are creating multiple clusters, we need to ensure their cluster IPs are
 # different from each other. Moreover, since we are getting IP addresses in a sequence,
 # we choose only those IP addresses from the list that are the primary replica for that
 # cluster
  - name: "Start K8s cluster primary master on this node"
    ansible.builtin.shell:
      cmd: kubeadm init --control-plane-endpoint {{ ansible_facts['default_ipv4']['address'] }} --service-cidr 10.{{ (80 + (groups[K8s['masters_inv']].index (inventory_hostname) // K8s['masters']) + 1)|string }}.0.0/16 --pod-network-cidr={{ K8s['pod_network'] }} {{ cmd_options }} 
      chdir: /home/{{ cloud['user'] }}
    become: yes  # run as sudo
    # execute only for primary replica master of each cluster
    when: "((groups[K8s['masters_inv']].index (inventory_hostname) % K8s['masters']) == 0)"

  - name: "Create the ~/.kube directory"
    ansible.builtin.file:
      path: "/home/{{ cloud['user'] }}/.kube"
      state: directory
    when: "((groups[K8s['masters_inv']].index (inventory_hostname) % K8s['masters']) == 0)"

  - name: "Copy the K8s admin conf file"
    ansible.builtin.copy:
      src: "/etc/kubernetes/admin.conf"
      dest: "/home/{{ cloud['user'] }}/.kube/config"
      remote_src: true  # file is on remote machine
      owner: "{{ cloud['user'] }}"
      group: "{{ cloud['user'] }}"
    become: yes
    when: "((groups[K8s['masters_inv']].index (inventory_hostname) % K8s['masters']) == 0)"

...
